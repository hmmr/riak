%% -*- mode: erlang -*-
[{leveled,
     [{snapshot_timeout_long, ${LEVELED_SNAPSHOT_TIMEOUT_LONG}},
      {snapshot_timeout_short, ${LEVELED_SNAPSHOT_TIMEOUT_SHORT}},
      {singlefile_compactionpercentage, ${LEVELED_SINGLEFILE_COMPACTIONPERCENTAGE}},
      {maxrunlength_compactionpercentage, ${LEVELED_MAXRUNLENGTH_COMPACTIONPERCENTAGE}},
      {max_run_length, ${LEVELED_MAX_RUN_LENGTH}},
      {compaction_top_hour, ${LEVELED_COMPACTION_TOP_HOUR}},
      {compaction_low_hour, ${LEVELED_COMPACTION_LOW_HOUR}},
      {compaction_scores_perday, ${LEVELED_COMPACTION_SCORES_PERDAY}},
      {compaction_runs_perday, ${LEVELED_COMPACTION_RUNS_PERDAY}},
      {ledger_pagecachelevel, ${LEVELED_LEDGER_PAGECACHELEVEL}},
      {journal_objectcount, ${LEVELED_JOURNAL_OBJECTCOUNT}},
      {journal_size, ${LEVELED_JOURNAL_SIZE}},
      {log_level, ${LEVELED_LOG_LEVEL}},
      {compression_point, ${LEVELED_COMPRESSION_POINT}},
      {compression_method, ${LEVELED_COMPRESSION_METHOD}},
      {penciller_cache_size, ${LEVELED_PENCILLER_CACHE_SIZE}},
      {cache_size, ${LEVELED_CACHE_SIZE}},
      {sync_strategy, ${LEVELED_SYNC_STRATEGY}},
      {data_root, "${LEVELED_DATA_ROOT}"}]},
 {riak_repl,
     [{fullsync_use_background_manager, ${RIAK_REPL_FULLSYNC_USE_BACKGROUND_MANAGER}},
      {rt_heartbeat_timeout, ${RIAK_REPL_RT_HEARTBEAT_TIMEOUT}},
      {rt_heartbeat_interval, ${RIAK_REPL_RT_HEARTBEAT_INTERVAL}},
      {rtq_max_bytes, ${RIAK_REPL_RTQ_MAX_BYTES}},
      {fullsync_on_connect, ${RIAK_REPL_FULLSYNC_ON_CONNECT}},
      {max_fssink_node, ${RIAK_REPL_MAX_FSSINK_NODE}},
      {fssource_retry_wait, ${RIAK_REPL_FSSOURCE_RETRY_WAIT}},
      {max_fssource_soft_retries, ${RIAK_REPL_MAX_FSSOURCE_SOFT_RETRIES}},
      {max_fssource_node, ${RIAK_REPL_MAX_FSSOURCE_NODE}},
      {max_fssource_cluster, ${RIAK_REPL_MAX_FSSOURCE_CLUSTER}},
      {data_root, "${RIAK_REPL_DATA_ROOT}"},
      {proxy_get, ${RIAK_REPL_PROXY_GET}},
      {fullsync_interval, ${RIAK_REPL_FULLSYNC_INTERVAL}}]},
 {riak_core,
     [{cluster_mgr, {"${RIAK_CORE_CLUSTER_MGR_IP}", ${RIAK_CORE_CLUSTER_MGR_PORT}}},
      {default_bucket_props,
          [{last_write_wins, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_LAST_WRITE_WINS}},
           {allow_mult, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_ALLOW_MULT}},
           {basic_quorum, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_BASIC_QUORUM}},
           {notfound_ok, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_NOTFOUND_OK}},
           {rw, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_RW}},
           {dw, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_DW}},
           {pw, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_PW}},
           {w, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_W}},
           {r, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_R}},
           {pr, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_PR}},
           {dvv_enabled, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_DVV_ENABLED}},
           {n_val, ${RIAK_CORE_DEFAULT_BUCKET_PROPS_N_VAL}}]},
      {participate_in_coverage, ${RIAK_CORE_PARTICIPATE_IN_COVERAGE}},
      {full_rebalance_onleave, ${RIAK_CORE_FULL_REBALANCE_ONLEAVE}},
      {vnode_management_timer, ${RIAK_CORE_VNODE_MANAGEMENT_TIMER}},
      {use_background_manager, ${RIAK_CORE_USE_BACKGROUND_MANAGER}},
      {enable_consensus, ${RIAK_CORE_ENABLE_CONSENSUS}},
      {platform_log_dir, "${RIAK_CORE_PLATFORM_LOG_DIR}"},
      {platform_lib_dir, "${RIAK_CORE_PLATFORM_LIB_DIR}"},
      {platform_etc_dir, "${RIAK_CORE_PLATFORM_ETC_DIR}"},
      {platform_data_dir, "${RIAK_CORE_PLATFORM_DATA_DIR}"},
      {platform_bin_dir, "${RIAK_CORE_PLATFORM_BIN_DIR}"},
      {dtrace_support, ${RIAK_CORE_DTRACE_SUPPORT}},
      {disable_inbound_handoff, ${RIAK_CORE_DISABLE_INBOUND_HANDOFF}},
      {disable_outbound_handoff, ${RIAK_CORE_DISABLE_OUTBOUND_HANDOFF}},
      {handoff_port, ${RIAK_CORE_HANDOFF_PORT}},
      {handoff_ip, "${RIAK_CORE_HANDOFF_IP}"},
      {ring_state_dir, "${RIAK_CORE_RING_STATE_DIR}"},
      {handoff_concurrency, ${RIAK_CORE_HANDOFF_CONCURRENCY}},
      {ring_creation_size, ${RIAK_CORE_RING_CREATION_SIZE}},
      {job_accept_class,
          [{riak_kv,list_buckets},
           {riak_kv,list_keys},
           {riak_kv,map_reduce},
           {riak_kv,map_reduce_js},
           {riak_kv,secondary_index},
           {riak_kv,stream_list_buckets},
           {riak_kv,stream_list_keys},
           {riak_kv,stream_secondary_index}]},
      {schema_dirs, ["./lib/schema"]}]},
 {eleveldb,
     [{whole_file_expiry, ${ELEVELDB_WHOLE_FILE_EXPIRY}},
      {expiry_enabled, ${ELEVELDB_EXPIRY_ENABLED}},
      {cache_object_warming, ${ELEVELDB_CACHE_OBJECT_WARMING}},
      {fadvise_willneed, ${ELEVELDB_FADVISE_WILLNEED}},
      {eleveldb_threads, ${ELEVELDB_ELEVELDB_THREADS}},
      {verify_compaction, ${ELEVELDB_VERIFY_COMPACTION}},
      {verify_checksums, ${ELEVELDB_VERIFY_CHECKSUMS}},
      {block_size_steps, ${ELEVELDB_BLOCK_SIZE_STEPS}},
      {block_restart_interval, ${ELEVELDB_BLOCK_RESTART_INTERVAL}},
      {sst_block_size, ${ELEVELDB_SST_BLOCK_SIZE}},
      {block_cache_threshold, ${ELEVELDB_BLOCK_CACHE_THRESHOLD}},
      {use_bloomfilter, ${ELEVELDB_USE_BLOOMFILTER}},
      {write_buffer_size_max, ${ELEVELDB_WRITE_BUFFER_SIZE_MAX}},
      {write_buffer_size_min, ${ELEVELDB_WRITE_BUFFER_SIZE_MIN}},
      {limited_developer_mem, ${ELEVELDB_LIMITED_DEVELOPER_MEM}},
      {sync, ${ELEVELDB_SYNC}},
      {total_leveldb_mem_percent, ${ELEVELDB_TOTAL_LEVELDB_MEM_PERCENT}},
      {data_root, "${ELEVELDB_DATA_ROOT}"},
      {compression, ${ELEVELDB_COMPRESSION}},
      {delete_threshold, ${ELEVELDB_DELETE_THRESHOLD}},
      {tiered_slow_level, ${ELEVELDB_TIERED_SLOW_LEVEL}},
      {expiry_minutes, ${ELEVELDB_EXPIRY_MINUTES}}]},
 {riak_sysmon,
     [{busy_dist_port, ${RIAK_SYSMON_BUSY_DIST_PORT}},
      {busy_port, ${RIAK_SYSMON_BUSY_PORT}},
      {port_limit, ${RIAK_SYSMON_PORT_LIMIT}},
      {process_limit, ${RIAK_SYSMON_PROCESS_LIMIT}},
      {gc_ms_limit, ${RIAK_SYSMON_GC_MS_LIMIT}},
      {schedule_ms_limit, ${RIAK_SYSMON_SCHEDULE_MS_LIMIT}},
      {heap_word_limit, ${RIAK_SYSMON_HEAP_WORD_LIMIT}}]},
 {riak_kv,
     [{replrtq_srcqueuelimit, ${RIAK_KV_REPLRTQ_SRCQUEUELIMIT}},
      {worker_pool_size, ${RIAK_KV_WORKER_POOL_SIZE}},
      {log_index_fsm, ${RIAK_KV_LOG_INDEX_FSM}},
      {timeseries_query_buffers_incomplete_release_ms, ${RIAK_KV_TIMESERIES_QUERY_BUFFERS_INCOMPLETE_RELEASE_MS}},
      {timeseries_query_buffers_expire_ms, ${RIAK_KV_TIMESERIES_QUERY_BUFFERS_EXPIRE_MS}},
      {timeseries_query_buffers_hard_watermark, ${RIAK_KV_TIMESERIES_QUERY_BUFFERS_HARD_WATERMARK}},
      {timeseries_query_buffers_soft_watermark, ${RIAK_KV_TIMESERIES_QUERY_BUFFERS_SOFT_WATERMARK}},
      {timeseries_query_buffers_root_path, "${RIAK_KV_TIMESERIES_QUERY_BUFFERS_ROOT_PATH}"},
      {timeseries_query_max_returned_data_size, ${RIAK_KV_TIMESERIES_QUERY_MAX_RETURNED_DATA_SIZE}},
      {timeseries_query_max_running_fsms, ${RIAK_KV_TIMESERIES_QUERY_MAX_RUNNING_FSMS}},
      {timeseries_query_queue_length, ${RIAK_KV_TIMESERIES_QUERY_QUEUE_LENGTH}},
      {concurrent_queries, ${RIAK_KV_CONCURRENT_QUERIES}},
      {leveled_reload_recalc, ${RIAK_KV_LEVELED_RELOAD_RECALC}},
      {replrtq_peer_discovery, ${RIAK_KV_REPLRTQ_PEER_DISCOVERY}},
      {replrtq_sinkworkers, ${RIAK_KV_REPLRTQ_SINKWORKERS}},
      {replrtq_sinkqueue, ${RIAK_KV_REPLRTQ_SINKQUEUE}},
      {replrtq_enablesink, ${RIAK_KV_REPLRTQ_ENABLESINK}},
      {replrtq_compressonwire, ${RIAK_KV_REPLRTQ_COMPRESSONWIRE}},
      {replrtq_srcqueue, "${RIAK_KV_REPLRTQ_SRCQUEUE}"},
      {replrtq_srcobjectsize, ${RIAK_KV_REPLRTQ_SRCOBJECTSIZE}},
      {replrtq_srcobjectlimit, ${RIAK_KV_REPLRTQ_SRCOBJECTLIMIT}},
      {replrtq_enablesrc, ${RIAK_KV_REPLRTQ_ENABLESRC}},
      {aae_fetchclocks_repair, ${RIAK_KV_AAE_FETCHCLOCKS_REPAIR}},
      {ttaaefs_logrepairs, ${RIAK_KV_TTAAEFS_LOGREPAIRS}},
      {ttaaefs_autocheck, ${RIAK_KV_TTAAEFS_AUTOCHECK}},
      {ttaaefs_rangecheck, ${RIAK_KV_TTAAEFS_RANGECHECK}},
      {ttaaefs_daycheck, ${RIAK_KV_TTAAEFS_DAYCHECK}},
      {ttaaefs_hourcheck, ${RIAK_KV_TTAAEFS_HOURCHECK}},
      {ttaaefs_nocheck, ${RIAK_KV_TTAAEFS_NOCHECK}},
      {ttaaefs_allcheck, ${RIAK_KV_TTAAEFS_ALLCHECK}},
      {ttaaefs_peerprotocol, ${RIAK_KV_TTAAEFS_PEERPROTOCOL}},
      {ttaaefs_remotenval, ${RIAK_KV_TTAAEFS_REMOTENVAL}},
      {ttaaefs_localnval, ${RIAK_KV_TTAAEFS_LOCALNVAL}},
      {ttaaefs_rangeboost, ${RIAK_KV_TTAAEFS_RANGEBOOST}},
      {ttaaefs_maxresults, ${RIAK_KV_TTAAEFS_MAXRESULTS}},
      {ttaaefs_cluster_slice, ${RIAK_KV_TTAAEFS_CLUSTER_SLICE}},
      {ttaaefs_queuename_peer, ${RIAK_KV_TTAAEFS_QUEUENAME_PEER}},
      {ttaaefs_queuename, ${RIAK_KV_TTAAEFS_QUEUENAME}},
      {ttaaefs_scope, ${RIAK_KV_TTAAEFS_SCOPE}},
      {aae_use_background_manager, ${RIAK_KV_AAE_USE_BACKGROUND_MANAGER}},
      {handoff_rejected_max, ${RIAK_KV_HANDOFF_REJECTED_MAX}},
      {handoff_use_background_manager, ${RIAK_KV_HANDOFF_USE_BACKGROUND_MANAGER}},
      {max_siblings, ${RIAK_KV_MAX_SIBLINGS}},
      {warn_siblings, ${RIAK_KV_WARN_SIBLINGS}},
      {max_object_size, ${RIAK_KV_MAX_OBJECT_SIZE}},
      {warn_object_size, ${RIAK_KV_WARN_OBJECT_SIZE}},
      {jmx_dummy, ${RIAK_KV_JMX_DUMMY}},
      {secure_referer_check, ${RIAK_KV_SECURE_REFERER_CHECK}},
      {mbox_check_enabled, ${RIAK_KV_MBOX_CHECK_ENABLED}},
      {retry_put_coordinator_failure, ${RIAK_KV_RETRY_PUT_COORDINATOR_FAILURE}},
      {anti_entropy_leveldb_opts,
          [{use_bloomfilter, ${RIAK_KV_ANTI_ENTROPY_LEVELDB_OPTS_USE_BLOOMFILTER}},
           {max_open_files, ${RIAK_KV_ANTI_ENTROPY_LEVELDB_OPTS_MAX_OPEN_FILES}},
           {write_buffer_size, ${RIAK_KV_ANTI_ENTROPY_LEVELDB_OPTS_WRITE_BUFFER_SIZE}}]},
      {aae_throttle_enabled, ${RIAK_KV_AAE_THROTTLE_ENABLED}},
      {anti_entropy_data_dir, "${RIAK_KV_ANTI_ENTROPY_DATA_DIR}"},
      {anti_entropy_tick, ${RIAK_KV_ANTI_ENTROPY_TICK}},
      {anti_entropy_concurrency, ${RIAK_KV_ANTI_ENTROPY_CONCURRENCY}},
      {anti_entropy_expire, ${RIAK_KV_ANTI_ENTROPY_EXPIRE}},
      {tombstone_pause, ${RIAK_KV_TOMBSTONE_PAUSE}},
      {backend_pause_ms, ${RIAK_KV_BACKEND_PAUSE_MS}},
      {be_worker_pool_size, ${RIAK_KV_BE_WORKER_POOL_SIZE}},
      {af4_worker_pool_size, ${RIAK_KV_AF4_WORKER_POOL_SIZE}},
      {af3_worker_pool_size, ${RIAK_KV_AF3_WORKER_POOL_SIZE}},
      {af2_worker_pool_size, ${RIAK_KV_AF2_WORKER_POOL_SIZE}},
      {af1_worker_pool_size, ${RIAK_KV_AF1_WORKER_POOL_SIZE}},
      {node_worker_pool_size, ${RIAK_KV_NODE_WORKER_POOL_SIZE}},
      {worker_pool_strategy, ${RIAK_KV_WORKER_POOL_STRATEGY}},
      {tictacaae_primaryonly, ${RIAK_KV_TICTACAAE_PRIMARYONLY}},
      {tictacaae_rangeboost, ${RIAK_KV_TICTACAAE_RANGEBOOST}},
      {tictacaae_repairloops, ${RIAK_KV_TICTACAAE_REPAIRLOOPS}},
      {tictacaae_maxresults, ${RIAK_KV_TICTACAAE_MAXRESULTS}},
      {tictacaae_rebuildtick, ${RIAK_KV_TICTACAAE_REBUILDTICK}},
      {tictacaae_exchangetick, ${RIAK_KV_TICTACAAE_EXCHANGETICK}},
      {tictacaae_storeheads, ${RIAK_KV_TICTACAAE_STOREHEADS}},
      {tictacaae_rebuilddelay, ${RIAK_KV_TICTACAAE_REBUILDDELAY}},
      {tictacaae_rebuildwait, ${RIAK_KV_TICTACAAE_REBUILDWAIT}},
      {tictacaae_parallelstore, ${RIAK_KV_TICTACAAE_PARALLELSTORE}},
      {replrtq_overflow_limit, ${RIAK_KV_REPLRTQ_OVERFLOW_LIMIT}},
      {reaper_overflow_limit, ${RIAK_KV_REAPER_OVERFLOW_LIMIT}},
      {eraser_overflow_limit, ${RIAK_KV_ERASER_OVERFLOW_LIMIT}},
      {replrtq_dataroot, "${RIAK_KV_REPLRTQ_DATAROOT}"},
      {reader_dataroot, "${RIAK_KV_READER_DATAROOT}"},
      {reaper_dataroot, "${RIAK_KV_REAPER_DATAROOT}"},
      {eraser_dataroot, "${RIAK_KV_ERASER_DATAROOT}"},
      {tictacaae_dataroot, "${RIAK_KV_TICTACAAE_DATAROOT}"},
      {aae_tokenbucket, ${RIAK_KV_AAE_TOKENBUCKET}},
      {tictacaae_active, ${RIAK_KV_TICTACAAE_ACTIVE}},
      {anti_entropy, ${RIAK_KV_ANTI_ENTROPY}},
      {storage_backend, ${RIAK_KV_STORAGE_BACKEND}},
      {anti_entropy_build_limit, {${RIAK_KV_ANTI_ENTROPY_BUILD_LIMIT_LO}, ${RIAK_KV_ANTI_ENTROPY_BUILD_LIMIT_HI}}},
      {fsm_limit, ${RIAK_KV_FSM_LIMIT}},
      {object_format, ${RIAK_KV_OBJECT_FORMAT}},
      {vnode_md_cache_size, ${RIAK_KV_VNODE_MD_CACHE_SIZE}},
      {ttaaefs_allcheck_window, ${RIAK_KV_TTAAEFS_ALLCHECK_WINDOW}},
      {max_query_quanta, ${RIAK_KV_MAX_QUERY_QUANTA}},
      {timeseries_query_timeout_ms, ${RIAK_KV_TIMESERIES_QUERY_TIMEOUT_MS}},
      {timeseries_query_max_quanta_span, ${RIAK_KV_TIMESERIES_QUERY_MAX_QUANTA_SPAN}},
      {timeseries_max_concurrent_queries, ${RIAK_KV_TIMESERIES_MAX_CONCURRENT_QUERIES}}]},
 {riak_dt,[{binary_compression, ${RIAK_DT_BINARY_COMPRESSION}}]},
 {riak_api,
     [{pb_keepalive, ${RIAK_API_PB_KEEPALIVE}},
      {disable_pb_nagle, ${RIAK_API_DISABLE_PB_NAGLE}},
      {pb_backlog, ${RIAK_API_PB_BACKLOG}},
      {http,[{"${RIAK_API_HTTP_IP}", ${RIAK_API_HTTP_PORT}}]},
      {pb, [{"${RIAK_API_PB_IP}", ${RIAK_API_PB_PORT}}]},
      {honor_cipher_order, ${RIAK_API_HONOR_CIPHER_ORDER}},
      {tls_protocols, ['tlsv1.2']},
      {check_crl, ${RIAK_API_CHECK_CRL}}]},
 {riak,
     []},
 {kernel,
     [{logger_level, ${KERNEL_LOGGER_LEVEL}},
      {logger,
          [{handler,default,logger_std_h,
               #{config =>
                     #{type => standard_io},
                 filters =>
                     [{no_sasl,
                          {fun logger_filters:domain/2,
                           {stop,super,[otp,sasl]}}}],
                 formatter =>
                     {logger_formatter,
                         #{template =>
                               [time," [",level,"] ",pid,"@",mfa,":",line," ",
                                msg,"\n"]}}}},
           {handler,sasl,logger_std_h,
               #{config =>
                     #{type => standard_error},
                 filter_default => stop,
                 filters =>
                     [{sasl_here,
                          {fun logger_filters:domain/2,
                           {log,equal,[otp,sasl]}}}],
                 formatter =>
                     {logger_formatter,
                         #{legacy_header => true,single_line => false}}}}]}]},
 {syslogger,[{log_opts,[pid]},{ident,"riak"}]},
 {setup,
     [{home, "${SETUP_HOME}"}]
 }
].
